#+OPTIONS: toc:nil H:10
#+LaTeX_HEADER: \usepackage{cv}
#+MACRO: first    Lorenzo
#+MACRO: last     Giuliani
#+MACRO: full     {{{first}}} {{{last}}}
#+MACRO: address  L'Aquila, via Monte Caticchio 10, 67100
#+MACRO: phone    0039 351 220 7990
#+MACRO: email    [[lorenzo@giuliani.me][lorenzo@giuliani.me]]
#+TITLE: Curriculum Vitae - Lorenzo Giuliani


* Informationi Personali
** Nome
   {{{full}}}

** Indirizzo
   {{{address}}}

** Telefono
   {{{phone}}}

** E-mail
   {{{email}}}

* Sommario

#+BEGIN_QUOTE
Simplicity is a prerequisite for reliability - Edsger W. Dijkstra
#+END_QUOTE

Programmatore di computer, devops ed entusiasto di sicurezza con un occhio di
riguardo verso la programmazione funzionale. Nerd che ama controllare i
superpoteri degli elaboratori brandendo Vim e, stranamente, Emacs. Preferisce
smontare i problemi in piccoli frammenti intellegibili che siano microservizi o
semplici funzioni. Ama la tecnologia /buona/ che rende la vita mento difficile
sempre tenendo conto di mantenibilità.

* Capacità Tecniche
** Linguaggi
- Esperto :: node.js, Clojure, POSIX Shell, lisp
- Conosciuti :: Java, Go, C/C++, Python

** Sistemi Operativi
- Esperto :: GNU/Linux (LFS, ArchLinux and Debian-based distributions),
     Windows/MS DOS
- Conosciuti :: MacOS, MacOS X, AmigaOS

** Strumenti
- Esperto :: Linux Containers (LXC), Docker, POSIX Shell
- Conosciuti :: KVM, VMWare, VirtualBox

** Piattaforme
- Esperto :: AWS, DigitalOcean, Scaleway
- Conosciuti :: OVH, generic VPS providers

* Esperienze Lavorative
** Maggio 2019 - Luglio 2019
*Backend Developer*, Myjar ltd, Tallinn, Estonia

- Maintainer e reimplementazione di molti microservice antiquati della società
  per risolvere bachi e irregolarità nell'esecuzione.
- Implementazione di serivizi per implementare API di terze parti e servizi Camunda

- Languaggi utilizzati :: Javascript on Node.js, Go, shell
- Tech stack :: Linux, Express.js, Mongoose, MongoDB, PostgreSQL, NGiNX, Caddy,
  Rancher, Docker, nmap, wireshark, Serverless.

** Gennaio 2016 - Dicembre 2018
*Backend Developer, Devop*, Mobilebridge BV, Amsterdam, Netherlands

- Ho costruito servizi infrastrutturali basati su container Docker con
  supervisore Rancher. I server sono stati dislocati in AWS con servizio EC2
  utilizzandone risorse come ECS, Route 53, S3, Cloudfront, RDS, Lambda e API
  Gateway.
  Il focus del progetto era /high-availability/, /fault tolerance/ e velocità di
  sviluppo e deployment.
- Ho creato tool per /stress-test/ distribuiti, usando appieno /autoscaling/ di
  AWS con distribuzione del carico di lavoro su multiple macchine.
- Ho creato e mantenuto il sistema di ingestione dati /real-time/ basata su AWS
  Lambda, DynamoDB, RDS e ElasticSearch. Il cuore del sistema.

- Languaggi utilizzati :: Javascript on Node.js, Go, shell
- Tech stack :: Linux, Express.js, Mongoose, MongoDB, PostgreSQL, NGiNX, Caddy,
  Rancher, Docker, nmap, wireshark, Serverless.

** Aprile 2013 - Novembre 2015
*Lead Backend node.js developer*, Contentment, London, United Kingdom

- Ho mantenuto la parte backend del prodotto /Padify/. Riscritto la logica
  business spostando dati da un database non strutturato come MongoDB verso
  PostgreSQL.
- Ho aggiunto feature come esportazione delle pubblicazioni verso formati di
  distribuzione diversi o servizi di terze parti come Adobe Content Server e
  PDF, ePub.
- Ho implememtato la nuova architettura modulare basata su microservice e
  container Docker usando AWS ECS, AWS EC2 ed Heroku.
- Pubblicato il nuovo servizio distribuito di ottimizzazione di risorse statiche
  e il loro deployment su S3.
- Provato la sicurezza del sistema attraverso penetration testing.

- Languaggi utilizzati :: Javascript on Node.js, Go, Python, shell
- Tech stack :: Linux, HTML5, Express.js, Mongoose, MongoDB, PostgreSQL, NGiNX,
  Docker, nmap, wireshark.

** Marzo 2007 - Presente
*Core developer*, GtGames, L'Aquila, Italy

Attualmente solo servizi in manutenzione.

- Machete CMS, un /content management system/ veloce e semplice da usare scritto
  in Ruby e Node.js.
- Ho gestito i server per /deployment/ del CMS per vari clienti, server mail e domaini.
- Ho sviluppato un set di widget Javascript distribuito nel CMS base fondati su
  piccole librerie funzionali evitando grossi framework come jQuery.

- Linguaggi :: Ruby, Javascript, Python, Java, shell
- Tech stack :: Linux, HTML5, Sinatra & Padrino, Flask, NGiNX, PostgreSQL,
  MongoDB, CouchDB, Linux Containers based on cgroups, nmap, wireshark.

** Gennaio 2009 - Decembre 2009
*Software developer*, Unbit SAS, Torino, Italy

- Ho sviluppato vari backend usando i framework python DJango e Flask.
- Mantenuto il layer di compatibilità uWSGI-Rack (Ruby).

- Languaggi :: Python, Ruby, Javascript, shell
- Tech stack :: Linux, Javascript, HTML, jQuery, Django, Flask, PostgreSQL, MySQL.
